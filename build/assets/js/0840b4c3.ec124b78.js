(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{112:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),o=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,a=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(r),f=n,b=u["".concat(a,".").concat(f)]||u[f]||d[f]||c;return r?o.a.createElement(b,i(i({ref:t},s),{},{components:r})):o.a.createElement(b,i({ref:t},s))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,a=new Array(c);a[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var s=2;s<c;s++)a[s]=r[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},69:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return l}));var n=r(3),o=r(7),c=(r(0),r(112)),a={id:"protocol",title:"Protocol"},i={unversionedId:"reference/modules/protocol",id:"reference/modules/protocol",isDocsHomePage:!1,title:"Protocol",description:"Overview",source:"@site/docs/reference/modules/protocol.md",slug:"/reference/modules/protocol",permalink:"/docs/reference/modules/protocol",editUrl:"https://github.com/0xPolygon/polygon-sdk-docs/docs/reference/modules/protocol.md",version:"current"},p=[{value:"Overview",id:"overview",children:[]},{value:"GRPC for Other Nodes",id:"grpc-for-other-nodes",children:[{value:"Status Object",id:"status-object",children:[]}]}],s={toc:p};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"overview"},"Overview"),Object(c.b)("p",null,"The ",Object(c.b)("strong",{parentName:"p"},"Protocol")," module contains the logic for the synchronization protocol."),Object(c.b)("p",null,"The Polygon SDK uses ",Object(c.b)("strong",{parentName:"p"},"libp2p")," as the networking layer, and on top of that runs ",Object(c.b)("strong",{parentName:"p"},"gRPC"),"."),Object(c.b)("h2",{id:"grpc-for-other-nodes"},"GRPC for Other Nodes"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-go",metastring:'title="protocol/proto/v1.proto"',title:'"protocol/proto/v1.proto"'},"service V1 {\n    // Returns status information regarding the specific point in time\n    rpc GetCurrent(google.protobuf.Empty) returns (V1Status);\n    \n    // Returns any type of object (Header, Body, Receipts...)\n    rpc GetObjectsByHash(HashRequest) returns (Response);\n    \n    // Returns a range of headers\n    rpc GetHeaders(GetHeadersRequest) returns (Response);\n    \n    // Watches what new blocks get included\n    rpc Watch(google.protobuf.Empty) returns (stream V1Status);\n}\n")),Object(c.b)("h3",{id:"status-object"},"Status Object"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-go",metastring:'title="protocol/proto/v1.proto"',title:'"protocol/proto/v1.proto"'},"message V1Status {\n    string difficulty = 1;\n    string hash = 2;\n    int64 number = 3;\n}\n")))}l.isMDXComponent=!0}}]);