(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,h=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return n?r.a.createElement(h,s(s({ref:t},l),{},{components:n})):r.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var o=n(3),r=n(7),a=(n(0),n(101)),i={id:"howto-query-operator",title:"How to query operator information"},s={unversionedId:"how-tos/howto-query-operator",id:"how-tos/howto-query-operator",isDocsHomePage:!1,title:"How to query operator information",description:"Prerequisites",source:"@site/docs/how-tos/howto-query-operator.md",slug:"/how-tos/howto-query-operator",permalink:"/docs/how-tos/howto-query-operator",editUrl:"https://github.com/0xPolygon/polygon-sdk-docs/docs/how-tos/howto-query-operator.md",version:"current",sidebar:"develop",previous:{title:"How to set up IBFT",permalink:"/docs/how-tos/howto-set-ibft"},next:{title:"How to query JSON RPC endpoints",permalink:"/docs/how-tos/howto-query-json-rpc"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Peer information",id:"peer-information",children:[{value:"Peers list",id:"peers-list",children:[]},{value:"Peer status",id:"peer-status",children:[]}]},{value:"IBFT info",id:"ibft-info",children:[{value:"Snapshots",id:"snapshots",children:[]},{value:"Candidates",id:"candidates",children:[]},{value:"Status",id:"status",children:[]}]},{value:"Transaction pool",id:"transaction-pool",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("p",null,"This how-to assumes you have followed the ",Object(a.b)("a",{parentName:"p",href:"/docs/how-tos/howto-set-ibft"},"guide on how to set up an IBFT cluster"),"."),Object(a.b)("p",null,"A functioning node is required in order to query any kind of operator information."),Object(a.b)("p",null,"With the Polygon SDK, node operators are in control and informed about what the node they're operating is doing.",Object(a.b)("br",null),"\nAt any time, they can use the node information layer, built on top of gRPC, and get meaningful information - no log sifting required."),Object(a.b)("h2",{id:"peer-information"},"Peer information"),Object(a.b)("h3",{id:"peers-list"},"Peers list"),Object(a.b)("p",null,"To get a complete list of connected peers (including the running node itself), run the following command:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go peers list\n")),Object(a.b)("p",null,"This will return a list of libp2p addresses that are currently peers of the running client."),Object(a.b)("h3",{id:"peer-status"},"Peer status"),Object(a.b)("p",null,"For the status of a specific peer, run:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go peers status <address>\n")),Object(a.b)("p",null,"With the ",Object(a.b)("em",{parentName:"p"},"address")," parameter being the libp2p address of the peer."),Object(a.b)("h2",{id:"ibft-info"},"IBFT info"),Object(a.b)("p",null,"Lots of times, an operator might want to know about the state of the operating node in IBFT consensus."),Object(a.b)("p",null,"Luckily, the Polygon SDK provides an easy way to find this information."),Object(a.b)("h3",{id:"snapshots"},"Snapshots"),Object(a.b)("p",null,"Running the following command returns the most recent snapshot."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go ibft snapshot\n")),Object(a.b)("p",null,"To query the snapshot at a specific height (block number), the operator can run:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go ibft snapshot --num <block-number>\n")),Object(a.b)("h3",{id:"candidates"},"Candidates"),Object(a.b)("p",null,"To get the latest info on candidates, the operator can run:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go ibft candidates\n")),Object(a.b)("p",null,"This command queries the current set of proposed candidates, as well as candidates that have not been included yet"),Object(a.b)("h3",{id:"status"},"Status"),Object(a.b)("p",null,"The following command returns the status of the overall IBFT client:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go ibft status\n")),Object(a.b)("h2",{id:"transaction-pool"},"Transaction pool"),Object(a.b)("p",null,"To find the current number of transactions in the transaction pool, the operator can run:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go txpool status\n")))}u.isMDXComponent=!0}}]);