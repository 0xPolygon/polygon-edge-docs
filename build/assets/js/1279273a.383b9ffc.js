(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=p(n),u=r,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||a;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(112)),i={id:"getting-started",title:"Getting Started"},c={unversionedId:"home/getting-started",id:"home/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"For a better understanding of some commands that will be used later on, it is recommended that you go over",source:"@site/docs/home/getting-started.md",slug:"/home/getting-started",permalink:"/docs/home/getting-started",editUrl:"https://github.com/0xPolygon/polygon-sdk-docs/docs/home/getting-started.md",version:"current",sidebar:"introduction"},s=[{value:"Example 1: Running nodes",id:"example-1-running-nodes",children:[]}],l={toc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"For a better understanding of some commands that will be used later on, it is recommended that you go over\nthe ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/cli-commands"},"CLI Commands"),", before diving deeper into the examples below."),Object(a.b)("p",null,"The main Polygon SDK version is located on the ",Object(a.b)("strong",{parentName:"p"},"develop")," branch, and is considered to be a stable version of the SDK,\nwhile other branches are mid-feature implementations."),Object(a.b)("p",null,"The technologies mentioned in the examples are covered in their corresponding modules in the documentation."),Object(a.b)("h2",{id:"example-1-running-nodes"},"Example 1: Running nodes"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Starting 2 nodes and monitoring their interaction:")),Object(a.b)("p",null,"This example will go over the basics of starting a node, and demonstrate how the nodes interact between each other."),Object(a.b)("p",null,"The following command will start 1 node:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go server --data-dir ./test-chain-1 --grpc :10000 --libp2p :10001 --jsonrpc :10002 --seal\n")),Object(a.b)("p",null,"To briefly go over what has been done so far:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The directory for the client data has been specified to be ./test-chain-1"),Object(a.b)("li",{parentName:"ul"},"The GRPC server has been started on port ",Object(a.b)("strong",{parentName:"li"},"10000")),Object(a.b)("li",{parentName:"ul"},"The libp2p server has been started on port ",Object(a.b)("strong",{parentName:"li"},"10001")),Object(a.b)("li",{parentName:"ul"},"The JSON-RPC server has been started on port ",Object(a.b)("strong",{parentName:"li"},"10002")),Object(a.b)("li",{parentName:"ul"},"The ",Object(a.b)("em",{parentName:"li"},"seal")," flag means that the node being started is going to participate in block sealing")),Object(a.b)("p",null,"By default, the client uses an empty genesis file with a ~5s PoW. The structure of the genesis file is covered in\nthe ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/cli-commands"},"CLI Commands")," section."),Object(a.b)("p",null,"After running the previous command, in the logs of the running client you will see the ",Object(a.b)("strong",{parentName:"p"},"libP2P")," address required to\nconnect to this node. This should be an address in the following form:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N\n")),Object(a.b)("p",null,"The next step would be to start a second node, also locally, and connect it to the first:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go server --data-dir ./test-chain-2 --grpc :20000 --libp2p :20001 --jsonrpc :20002 --seal --join <node-1-libp2p-addr>\n")),Object(a.b)("p",null,"The meaning of the commands are the same as in the previous execution, the only thing that is notable is the ",Object(a.b)("strong",{parentName:"p"},"join"),"\nflag, which specifies the previously started node as a peer."),Object(a.b)("p",null,"To monitor blockchain events(i.e forks, reorgs...) from node 2, the following command is used:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"go run main.go monitor --address localhost:20000\n")))}p.isMDXComponent=!0}}]);